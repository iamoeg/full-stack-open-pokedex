name: Deployment pipeline

env:
  MUST_SKIP_DEPLOYMENT: ${{ contains(join(github.event.commits.*.message, ' || '), '#skip') }}

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [opened, synchronize]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install dependencies
        run: npm install
      - name: Run ESLint
        run: npm run eslint

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install dependencies
        run: npm install
      - name: Build application
        run: npm run build

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm test

  e2e-test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install dependencies
        run: npm install
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npm run test:e2e
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  deploy:
    if: ${{ github.event_name == 'push' && github.env.MUST_SKIP_DEPLOYMENT == false }}
    needs: [lint, build, test, e2e-test]
    runs-on: ubuntu-latest
    concurrency: deploy-group # optional: ensure only one action runs at a time
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      - name: Success case
        if: ${{ success() }}
        uses: sebastianpopp/discord-action@releases/v2
        with:
          message: "New release deployed successfully!\nRepository: ${{ github.repository }}"
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Failure case
        if: ${{ failure() }}
        uses: sebastianpopp/discord-action@releases/v2
        with:
          message: "Deployment failed! \nRepository: ${{ github.repository }}"
          webhook: ${{ secrets.DISCORD_WEBHOOK }}

  tag_release:
    if: ${{ github.event_name == 'push' }}
    needs: [deploy]
    runs-on: ubuntu-latest
    concurrency: deploy-group
    steps:
      - uses: actions/checkout@v4
      - uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: "patch"
